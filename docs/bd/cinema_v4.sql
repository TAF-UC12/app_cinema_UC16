-- MySQL Script generated by MySQL Workbench
-- 06/02/18 23:36:26
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema cinema_v4
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema cinema_v4
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `cinema_v4` DEFAULT CHARACTER SET utf8 COLLATE utf8_swedish_ci ;
USE `cinema_v4` ;

-- -----------------------------------------------------
-- Table `cinema_v4`.`generos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinema_v4`.`generos` (
  `idgeneros` INT NOT NULL AUTO_INCREMENT,
  `nomegenero` VARCHAR(45) NULL,
  PRIMARY KEY (`idgeneros`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinema_v4`.`filmes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinema_v4`.`filmes` (
  `idfilmes` INT NOT NULL AUTO_INCREMENT,
  `titulo` VARCHAR(100) NULL,
  `titulo_original` VARCHAR(100) NULL,
  `diretor` VARCHAR(100) NULL,
  `elenco` TEXT NULL,
  `sinopse` TEXT NULL,
  `lancamento` DATE NULL,
  `duracao` INT NULL,
  `poster` VARCHAR(45) NULL,
  `imgFundo` VARCHAR(45) NULL,
  `emCartaz` VARCHAR(3) NULL DEFAULT 'off',
  `trailer` VARCHAR(45) NULL,
  `paisOrigem` VARCHAR(100) NULL,
  PRIMARY KEY (`idfilmes`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinema_v4`.`desenvolvedoras`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinema_v4`.`desenvolvedoras` (
  `iddesenvolvedoras` INT NOT NULL AUTO_INCREMENT,
  `nomeDesenvolvedora` VARCHAR(100) NULL,
  PRIMARY KEY (`iddesenvolvedoras`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinema_v4`.`publicadoras`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinema_v4`.`publicadoras` (
  `idpublicadora` INT NOT NULL AUTO_INCREMENT,
  `nomePublicadora` VARCHAR(100) NULL,
  PRIMARY KEY (`idpublicadora`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinema_v4`.`games`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinema_v4`.`games` (
  `idgames` INT NOT NULL AUTO_INCREMENT,
  `tituloGame` VARCHAR(100) NULL,
  `desenvolvedora` INT NOT NULL,
  `publicadora` INT NOT NULL,
  `lancamentoGame` DATE NULL,
  `diretor` VARCHAR(100) NULL,
  `sinopseGame` TEXT NULL,
  `imgGame` VARCHAR(45) NULL,
  `imgFundo` VARCHAR(45) NULL,
  PRIMARY KEY (`idgames`),
  INDEX `fk_desenvolvedora_idx` (`desenvolvedora` ASC),
  INDEX `fk_publicadora_idx` (`publicadora` ASC),
  CONSTRAINT `fk_desenvolvedora`
    FOREIGN KEY (`desenvolvedora`)
    REFERENCES `cinema_v4`.`desenvolvedoras` (`iddesenvolvedoras`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_publicadora`
    FOREIGN KEY (`publicadora`)
    REFERENCES `cinema_v4`.`publicadoras` (`idpublicadora`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinema_v4`.`consoles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinema_v4`.`consoles` (
  `idconsoles` INT NOT NULL AUTO_INCREMENT,
  `nomeConsole` VARCHAR(45) NULL,
  PRIMARY KEY (`idconsoles`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinema_v4`.`games_has_consoles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinema_v4`.`games_has_consoles` (
  `games_idgames` INT NOT NULL,
  `consoles_idconsoles` INT NOT NULL,
  PRIMARY KEY (`games_idgames`, `consoles_idconsoles`),
  INDEX `fk_games_has_consoles_consoles1_idx` (`consoles_idconsoles` ASC),
  INDEX `fk_games_has_consoles_games1_idx` (`games_idgames` ASC),
  CONSTRAINT `fk_games_has_consoles_games1`
    FOREIGN KEY (`games_idgames`)
    REFERENCES `cinema_v4`.`games` (`idgames`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_games_has_consoles_consoles1`
    FOREIGN KEY (`consoles_idconsoles`)
    REFERENCES `cinema_v4`.`consoles` (`idconsoles`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinema_v4`.`filmes_has_generos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinema_v4`.`filmes_has_generos` (
  `filmes_idfilmes` INT NOT NULL,
  `generos_idgeneros` INT NOT NULL,
  PRIMARY KEY (`filmes_idfilmes`, `generos_idgeneros`),
  INDEX `fk_filmes_has_generos_generos1_idx` (`generos_idgeneros` ASC),
  INDEX `fk_filmes_has_generos_filmes1_idx` (`filmes_idfilmes` ASC),
  CONSTRAINT `fk_filmes_has_generos_filmes1`
    FOREIGN KEY (`filmes_idfilmes`)
    REFERENCES `cinema_v4`.`filmes` (`idfilmes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_filmes_has_generos_generos1`
    FOREIGN KEY (`generos_idgeneros`)
    REFERENCES `cinema_v4`.`generos` (`idgeneros`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinema_v4`.`games_has_generos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinema_v4`.`games_has_generos` (
  `games_idgames` INT NOT NULL,
  `generos_idgeneros` INT NOT NULL,
  PRIMARY KEY (`games_idgames`, `generos_idgeneros`),
  INDEX `fk_games_has_generos_generos1_idx` (`generos_idgeneros` ASC),
  INDEX `fk_games_has_generos_games1_idx` (`games_idgames` ASC),
  CONSTRAINT `fk_games_has_generos_games1`
    FOREIGN KEY (`games_idgames`)
    REFERENCES `cinema_v4`.`games` (`idgames`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_games_has_generos_generos1`
    FOREIGN KEY (`generos_idgeneros`)
    REFERENCES `cinema_v4`.`generos` (`idgeneros`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinema_v4`.`login`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinema_v4`.`login` (
  `idlogin` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(100) NULL,
  `email` VARCHAR(100) NULL,
  `usuario` VARCHAR(45) NULL,
  `senha` VARCHAR(100) NULL,
  PRIMARY KEY (`idlogin`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinema_v4`.`tipoPostagem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinema_v4`.`tipoPostagem` (
  `idtipoPostagem` INT NOT NULL AUTO_INCREMENT,
  `tipoPost` VARCHAR(45) NULL,
  PRIMARY KEY (`idtipoPostagem`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinema_v4`.`emissoras`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinema_v4`.`emissoras` (
  `idemissoras` INT NOT NULL AUTO_INCREMENT,
  `nomeEmissora` VARCHAR(45) NULL,
  PRIMARY KEY (`idemissoras`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinema_v4`.`series`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinema_v4`.`series` (
  `idseries` INT NOT NULL AUTO_INCREMENT,
  `titulo` VARCHAR(100) NULL,
  `elenco` TEXT NULL,
  `sinopse` TEXT NULL,
  `canal` INT NULL,
  `ano` YEAR NULL,
  `lancamento` DATE NULL,
  `temporadas` INT NULL,
  `poster` VARCHAR(45) NULL,
  `paisOrigem` VARCHAR(100) NULL,
  PRIMARY KEY (`idseries`),
  INDEX `fk_emissora_idx` (`canal` ASC),
  CONSTRAINT `fk_emissora`
    FOREIGN KEY (`canal`)
    REFERENCES `cinema_v4`.`emissoras` (`idemissoras`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinema_v4`.`noticias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinema_v4`.`noticias` (
  `idnoticias` INT NOT NULL AUTO_INCREMENT,
  `tituloNoticia` VARCHAR(200) NULL,
  `subtitulo` VARCHAR(200) NULL,
  `texto` TEXT NULL,
  `dataPost` DATE NULL,
  `horaPost` TIME NULL,
  `autorPost` INT NULL,
  `tipo` INT NULL,
  `relac_games` INT NULL,
  `relac_filmes` INT NULL,
  `relac_series` INT NULL,
  `img` VARCHAR(45) NULL,
  `destaque` CHAR(3) NULL DEFAULT 'off',
  `imgDestaque` VARCHAR(45) NULL,
  PRIMARY KEY (`idnoticias`),
  INDEX `fk_autor_idx` (`autorPost` ASC),
  INDEX `fk_tipo_post_idx` (`tipo` ASC),
  INDEX `fk_rel_games_idx` (`relac_games` ASC),
  INDEX `fk_rel_filmes_idx` (`relac_filmes` ASC),
  INDEX `fk_rel_series_idx` (`relac_series` ASC),
  CONSTRAINT `fk_autor`
    FOREIGN KEY (`autorPost`)
    REFERENCES `cinema_v4`.`login` (`idlogin`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tipo_post`
    FOREIGN KEY (`tipo`)
    REFERENCES `cinema_v4`.`tipoPostagem` (`idtipoPostagem`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_rel_games`
    FOREIGN KEY (`relac_games`)
    REFERENCES `cinema_v4`.`games` (`idgames`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_rel_filmes`
    FOREIGN KEY (`relac_filmes`)
    REFERENCES `cinema_v4`.`filmes` (`idfilmes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_rel_series`
    FOREIGN KEY (`relac_series`)
    REFERENCES `cinema_v4`.`series` (`idseries`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinema_v4`.`series_has_generos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinema_v4`.`series_has_generos` (
  `series_idseries` INT NOT NULL,
  `generos_idgeneros` INT NOT NULL,
  PRIMARY KEY (`series_idseries`, `generos_idgeneros`),
  INDEX `fk_series_has_generos_generos1_idx` (`generos_idgeneros` ASC),
  INDEX `fk_series_has_generos_series1_idx` (`series_idseries` ASC),
  CONSTRAINT `fk_series_has_generos_series1`
    FOREIGN KEY (`series_idseries`)
    REFERENCES `cinema_v4`.`series` (`idseries`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_series_has_generos_generos1`
    FOREIGN KEY (`generos_idgeneros`)
    REFERENCES `cinema_v4`.`generos` (`idgeneros`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `cinema_v4`.`generos`
-- -----------------------------------------------------
START TRANSACTION;
USE `cinema_v4`;
INSERT INTO `cinema_v4`.`generos` (`idgeneros`, `nomegenero`) VALUES (NULL, 'Terror');
INSERT INTO `cinema_v4`.`generos` (`idgeneros`, `nomegenero`) VALUES (NULL, 'Ação');
INSERT INTO `cinema_v4`.`generos` (`idgeneros`, `nomegenero`) VALUES (NULL, 'Drama');
INSERT INTO `cinema_v4`.`generos` (`idgeneros`, `nomegenero`) VALUES (NULL, 'Suspense');
INSERT INTO `cinema_v4`.`generos` (`idgeneros`, `nomegenero`) VALUES (NULL, 'Aventura');
INSERT INTO `cinema_v4`.`generos` (`idgeneros`, `nomegenero`) VALUES (NULL, 'Nacional');
INSERT INTO `cinema_v4`.`generos` (`idgeneros`, `nomegenero`) VALUES (NULL, 'Comédia');
INSERT INTO `cinema_v4`.`generos` (`idgeneros`, `nomegenero`) VALUES (NULL, 'Fantasia');
INSERT INTO `cinema_v4`.`generos` (`idgeneros`, `nomegenero`) VALUES (NULL, 'Sci-Fi');
INSERT INTO `cinema_v4`.`generos` (`idgeneros`, `nomegenero`) VALUES (NULL, 'Western');
INSERT INTO `cinema_v4`.`generos` (`idgeneros`, `nomegenero`) VALUES (NULL, 'Não especificado');
INSERT INTO `cinema_v4`.`generos` (`idgeneros`, `nomegenero`) VALUES (NULL, 'FPS');
INSERT INTO `cinema_v4`.`generos` (`idgeneros`, `nomegenero`) VALUES (NULL, 'Estratégia');
INSERT INTO `cinema_v4`.`generos` (`idgeneros`, `nomegenero`) VALUES (NULL, 'RPG');
INSERT INTO `cinema_v4`.`generos` (`idgeneros`, `nomegenero`) VALUES (NULL, 'Simulador');
INSERT INTO `cinema_v4`.`generos` (`idgeneros`, `nomegenero`) VALUES (NULL, 'Esporte');
INSERT INTO `cinema_v4`.`generos` (`idgeneros`, `nomegenero`) VALUES (NULL, 'Sandbox');
INSERT INTO `cinema_v4`.`generos` (`idgeneros`, `nomegenero`) VALUES (NULL, 'Plataforma');
INSERT INTO `cinema_v4`.`generos` (`idgeneros`, `nomegenero`) VALUES (NULL, '2D');

COMMIT;


-- -----------------------------------------------------
-- Data for table `cinema_v4`.`filmes`
-- -----------------------------------------------------
START TRANSACTION;
USE `cinema_v4`;
INSERT INTO `cinema_v4`.`filmes` (`idfilmes`, `titulo`, `titulo_original`, `diretor`, `elenco`, `sinopse`, `lancamento`, `duracao`, `poster`, `imgFundo`, `emCartaz`, `trailer`, `paisOrigem`) VALUES (NULL, 'Vingadores: Guerra Infinita', 'Avengers: Infinity War', 'Irmãos Russo', 'Robert Downey Jr., Chris Hemsworth, Mark Ruffalo', 'Thanos (Josh Brolin) enfim chega à Terra, disposto a reunir as Joias do Infinito. Para enfrentá-lo, os Vingadores precisam unir forças com os Guardiões da Galáxia, ao mesmo tempo em que lidam com desavenças entre alguns de seus integrantes.', '20180426', 256, 'vingadores_guerra_infinita.jpg', 'vingadores_guerra_infinita_bio.jpg', 'sim', NULL, 'Estados Unidos');
INSERT INTO `cinema_v4`.`filmes` (`idfilmes`, `titulo`, `titulo_original`, `diretor`, `elenco`, `sinopse`, `lancamento`, `duracao`, `poster`, `imgFundo`, `emCartaz`, `trailer`, `paisOrigem`) VALUES (NULL, 'A Noite do Jogo', 'Game Night', 'Jonathan Goldstein (XII), John Francis Daley', 'Jason Bateman, Rachel McAdams, Kyle Chandler', 'Max (Jason Bateman) e Annie (Rachel McAdams) participam de um grupo de casais que organizam noites de jogos. O irmão de Max, Brooks (Kyle Chandler), chega decidido a organizar uma festa de assassinato e mistério e acaba sequestrado, levando todos a acreditarem que o sumiço faz parte da misteriosa brincadeira. Os seis amigos competitivos precisam então resolver o caso para vencer o jogo, cujo rumo vai se tornando cada vez mais inesperado. ', '20180510', 141, 'a_noite_do_jogo.jpg', 'game_night_bio.jpg', 'sim', NULL, 'Estados Unidos');
INSERT INTO `cinema_v4`.`filmes` (`idfilmes`, `titulo`, `titulo_original`, `diretor`, `elenco`, `sinopse`, `lancamento`, `duracao`, `poster`, `imgFundo`, `emCartaz`, `trailer`, `paisOrigem`) VALUES (NULL, 'Jurassic World: Reino Ameaçado', 'Jurassic World: Fallen Kingdom', 'Juan Antonio Bayona', 'Chris Pratt, Bryce Dallas Howard, B.D. Wong', 'Quatro anos após o fechamento do Jurassic Park, um vulcão prestes a entrar em erupção põe em risco a vida na ilha Nublar. No local não há mais qualquer presença humana, com os dinossauros vivendo livremente. Diante da situação, é preciso tomar uma decisão: deve-se retornar à ilha para salvar os animais ou abandoná-los para uma nova extinção? Decidida a resgatá-los, Claire (Bryce Dallas Howard) convoca Owen (Chris Pratt) a retornar à ilha com ela.', '20180621', 120, 'jurassicworld2.jpg', 'jurassicworld2_bio.jpg', 'off', NULL, 'Estados Unidos');
INSERT INTO `cinema_v4`.`filmes` (`idfilmes`, `titulo`, `titulo_original`, `diretor`, `elenco`, `sinopse`, `lancamento`, `duracao`, `poster`, `imgFundo`, `emCartaz`, `trailer`, `paisOrigem`) VALUES (NULL, 'Deadpool 2', 'Deadpool 2', 'David Leitch', 'Ryan Reynolds, Josh Brolin, Morena Baccarin', 'Sequência das aventuras do Mercenário Tagarela, interpretado por Ryan Reynolds. Na história original, o herói adquire superpoderes após uma experiência científica, e decide se vingar da pessoa responsável por sequestrar sua namorada.', '20180517', 120, 'deadpool2.jpg', 'deadpool_2_bio.jpg', 'sim', NULL, 'Estados Unidos');

COMMIT;


-- -----------------------------------------------------
-- Data for table `cinema_v4`.`desenvolvedoras`
-- -----------------------------------------------------
START TRANSACTION;
USE `cinema_v4`;
INSERT INTO `cinema_v4`.`desenvolvedoras` (`iddesenvolvedoras`, `nomeDesenvolvedora`) VALUES (NULL, 'SCE Santa Monica');
INSERT INTO `cinema_v4`.`desenvolvedoras` (`iddesenvolvedoras`, `nomeDesenvolvedora`) VALUES (NULL, 'Ubisoft Montreal');
INSERT INTO `cinema_v4`.`desenvolvedoras` (`iddesenvolvedoras`, `nomeDesenvolvedora`) VALUES (NULL, 'Undead Labs');
INSERT INTO `cinema_v4`.`desenvolvedoras` (`iddesenvolvedoras`, `nomeDesenvolvedora`) VALUES (NULL, 'Retro Studios');

COMMIT;


-- -----------------------------------------------------
-- Data for table `cinema_v4`.`publicadoras`
-- -----------------------------------------------------
START TRANSACTION;
USE `cinema_v4`;
INSERT INTO `cinema_v4`.`publicadoras` (`idpublicadora`, `nomePublicadora`) VALUES (NULL, 'Sony Interactive Entertainment');
INSERT INTO `cinema_v4`.`publicadoras` (`idpublicadora`, `nomePublicadora`) VALUES (NULL, 'Nintendo');
INSERT INTO `cinema_v4`.`publicadoras` (`idpublicadora`, `nomePublicadora`) VALUES (NULL, 'Microsoft Studios');

COMMIT;


-- -----------------------------------------------------
-- Data for table `cinema_v4`.`games`
-- -----------------------------------------------------
START TRANSACTION;
USE `cinema_v4`;
INSERT INTO `cinema_v4`.`games` (`idgames`, `tituloGame`, `desenvolvedora`, `publicadora`, `lancamentoGame`, `diretor`, `sinopseGame`, `imgGame`, `imgFundo`) VALUES (NULL, 'God of War', 1, 1, '20180420', 'Cory Barlog', ' His vengeance against the gods of Olympus far behind him, Kratos now lives as a man in the lands of Norse Gods and monsters. It is in this harsh, unforgiving world that he must fight to survive… and teach his son to do the same. As mentor and protector to a son determined to earn his respect, Kratos is faced with an unexpected opportunity to master the rage that has long defined him. Questioning the dark lineage he’s passed on to his son, he hopes to make amends for the shortcomings of his past. Set within the untamed forests, mountains, and realms of Norse lore, God of War features a distinctly new setting with its own pantheon of creatures, monsters, and gods. ', 'gow4.jpg', NULL);
INSERT INTO `cinema_v4`.`games` (`idgames`, `tituloGame`, `desenvolvedora`, `publicadora`, `lancamentoGame`, `diretor`, `sinopseGame`, `imgGame`, `imgFundo`) VALUES (NULL, 'State of Decay 2', 3, 3, '20180518', NULL, 'Small-Town America, one year from today. The dead have risen, and civilization has fallen. Even the military couldn’t stop the zombies, and now humanity stands on the brink of extinction. It\'s up to you to gather survivors and build a community, explore your lasting legacy, and redefine what it means to survive. It’s up to you to build your base, develop your characters, and manage resources to survive as a group in this post-apocalyptic zombie open world. RPG progression - Develop each survivor’s skills to improve their capabilities and strengthen your community. Play solo or team up with up to three friends to explore an open world filled with dynamic zombies, human enemies, and the valuable gear necessary to keep your community alive. In the zombie apocalypse, you must create your own moral code. Every decision has lasting consequences that you must face. How you decide to survive may surprise you.', 'decay2.jpg', NULL);
INSERT INTO `cinema_v4`.`games` (`idgames`, `tituloGame`, `desenvolvedora`, `publicadora`, `lancamentoGame`, `diretor`, `sinopseGame`, `imgGame`, `imgFundo`) VALUES (NULL, 'Donkey Kong: Tropical Freeze', 4, 2, '20180504', 'Risa Tabata', 'Help Donkey Kong and his friends get back their home from Vikings in the Donkey Kong Country: Tropical Freeze game from Retro Studios. All the challenging ground-pounding, barrel-blasting and mine cart action from the Donkey Kong Country series is back, along with a bushel of new game-play elements and features.', 'donkey.jpg', NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `cinema_v4`.`consoles`
-- -----------------------------------------------------
START TRANSACTION;
USE `cinema_v4`;
INSERT INTO `cinema_v4`.`consoles` (`idconsoles`, `nomeConsole`) VALUES (NULL, 'PlayStation 4');
INSERT INTO `cinema_v4`.`consoles` (`idconsoles`, `nomeConsole`) VALUES (NULL, 'Xbox One');
INSERT INTO `cinema_v4`.`consoles` (`idconsoles`, `nomeConsole`) VALUES (NULL, 'Nintendo Switch');
INSERT INTO `cinema_v4`.`consoles` (`idconsoles`, `nomeConsole`) VALUES (NULL, 'PlayStation 3');
INSERT INTO `cinema_v4`.`consoles` (`idconsoles`, `nomeConsole`) VALUES (NULL, 'Xbox 360');
INSERT INTO `cinema_v4`.`consoles` (`idconsoles`, `nomeConsole`) VALUES (NULL, 'Nintendo WiiU');
INSERT INTO `cinema_v4`.`consoles` (`idconsoles`, `nomeConsole`) VALUES (NULL, 'PS Vita');
INSERT INTO `cinema_v4`.`consoles` (`idconsoles`, `nomeConsole`) VALUES (NULL, 'Nintendo 3DS');
INSERT INTO `cinema_v4`.`consoles` (`idconsoles`, `nomeConsole`) VALUES (NULL, 'PC');
INSERT INTO `cinema_v4`.`consoles` (`idconsoles`, `nomeConsole`) VALUES (NULL, 'Mobile');

COMMIT;


-- -----------------------------------------------------
-- Data for table `cinema_v4`.`games_has_consoles`
-- -----------------------------------------------------
START TRANSACTION;
USE `cinema_v4`;
INSERT INTO `cinema_v4`.`games_has_consoles` (`games_idgames`, `consoles_idconsoles`) VALUES (1, 1);
INSERT INTO `cinema_v4`.`games_has_consoles` (`games_idgames`, `consoles_idconsoles`) VALUES (2, 2);
INSERT INTO `cinema_v4`.`games_has_consoles` (`games_idgames`, `consoles_idconsoles`) VALUES (3, 3);
INSERT INTO `cinema_v4`.`games_has_consoles` (`games_idgames`, `consoles_idconsoles`) VALUES (3, 6);

COMMIT;


-- -----------------------------------------------------
-- Data for table `cinema_v4`.`filmes_has_generos`
-- -----------------------------------------------------
START TRANSACTION;
USE `cinema_v4`;
INSERT INTO `cinema_v4`.`filmes_has_generos` (`filmes_idfilmes`, `generos_idgeneros`) VALUES (1, 2);
INSERT INTO `cinema_v4`.`filmes_has_generos` (`filmes_idfilmes`, `generos_idgeneros`) VALUES (1, 5);
INSERT INTO `cinema_v4`.`filmes_has_generos` (`filmes_idfilmes`, `generos_idgeneros`) VALUES (2, 7);
INSERT INTO `cinema_v4`.`filmes_has_generos` (`filmes_idfilmes`, `generos_idgeneros`) VALUES (4, 2);
INSERT INTO `cinema_v4`.`filmes_has_generos` (`filmes_idfilmes`, `generos_idgeneros`) VALUES (4, 5);
INSERT INTO `cinema_v4`.`filmes_has_generos` (`filmes_idfilmes`, `generos_idgeneros`) VALUES (4, 7);
INSERT INTO `cinema_v4`.`filmes_has_generos` (`filmes_idfilmes`, `generos_idgeneros`) VALUES (3, 2);
INSERT INTO `cinema_v4`.`filmes_has_generos` (`filmes_idfilmes`, `generos_idgeneros`) VALUES (3, 9);

COMMIT;


-- -----------------------------------------------------
-- Data for table `cinema_v4`.`games_has_generos`
-- -----------------------------------------------------
START TRANSACTION;
USE `cinema_v4`;
INSERT INTO `cinema_v4`.`games_has_generos` (`games_idgames`, `generos_idgeneros`) VALUES (1, 2);
INSERT INTO `cinema_v4`.`games_has_generos` (`games_idgames`, `generos_idgeneros`) VALUES (1, 5);
INSERT INTO `cinema_v4`.`games_has_generos` (`games_idgames`, `generos_idgeneros`) VALUES (2, 2);
INSERT INTO `cinema_v4`.`games_has_generos` (`games_idgames`, `generos_idgeneros`) VALUES (2, 5);
INSERT INTO `cinema_v4`.`games_has_generos` (`games_idgames`, `generos_idgeneros`) VALUES (2, 17);
INSERT INTO `cinema_v4`.`games_has_generos` (`games_idgames`, `generos_idgeneros`) VALUES (3, 18);
INSERT INTO `cinema_v4`.`games_has_generos` (`games_idgames`, `generos_idgeneros`) VALUES (3, 19);

COMMIT;


-- -----------------------------------------------------
-- Data for table `cinema_v4`.`login`
-- -----------------------------------------------------
START TRANSACTION;
USE `cinema_v4`;
INSERT INTO `cinema_v4`.`login` (`idlogin`, `nome`, `email`, `usuario`, `senha`) VALUES (NULL, 'Thiago Silva', 'stornwild@yahoo.com.br', 'thiago', '123456');

COMMIT;


-- -----------------------------------------------------
-- Data for table `cinema_v4`.`tipoPostagem`
-- -----------------------------------------------------
START TRANSACTION;
USE `cinema_v4`;
INSERT INTO `cinema_v4`.`tipoPostagem` (`idtipoPostagem`, `tipoPost`) VALUES (NULL, 'Cinema');
INSERT INTO `cinema_v4`.`tipoPostagem` (`idtipoPostagem`, `tipoPost`) VALUES (NULL, 'Games');
INSERT INTO `cinema_v4`.`tipoPostagem` (`idtipoPostagem`, `tipoPost`) VALUES (NULL, 'Series');

COMMIT;


-- -----------------------------------------------------
-- Data for table `cinema_v4`.`emissoras`
-- -----------------------------------------------------
START TRANSACTION;
USE `cinema_v4`;
INSERT INTO `cinema_v4`.`emissoras` (`idemissoras`, `nomeEmissora`) VALUES (NULL, 'CBS All Access');
INSERT INTO `cinema_v4`.`emissoras` (`idemissoras`, `nomeEmissora`) VALUES (NULL, 'Hulu');
INSERT INTO `cinema_v4`.`emissoras` (`idemissoras`, `nomeEmissora`) VALUES (NULL, 'HBO');

COMMIT;


-- -----------------------------------------------------
-- Data for table `cinema_v4`.`series`
-- -----------------------------------------------------
START TRANSACTION;
USE `cinema_v4`;
INSERT INTO `cinema_v4`.`series` (`idseries`, `titulo`, `elenco`, `sinopse`, `canal`, `ano`, `lancamento`, `temporadas`, `poster`, `paisOrigem`) VALUES (NULL, 'The Good Fight', ' Christine Baranski, Rose Leslie, Cush Jumbo ', 'A year after the finale of The Good Wife, an enormous financial scam destroys the reputation of young lawyer Maia and wipes out the savings of her mentor, Diane Lockhart. The two are forced out of Lockhart, Deckler, Gussman, Lee, Lyman, Gilbert-Lurie, Kagan, Tannebaum, & Associates and join Diane\'s former employee Lucca Quinn at Reddick, Boseman, & Kolstad, a prestigious African American–owned firm making waves by taking on Illinois police brutality cases. In season two, Diane becomes a name partner at the firm, which takes the name Reddick, Boseman & Lockhart.', 1, 2017, '20170219', 2, 'goodfight.jpg', 'Estados Unidos');
INSERT INTO `cinema_v4`.`series` (`idseries`, `titulo`, `elenco`, `sinopse`, `canal`, `ano`, `lancamento`, `temporadas`, `poster`, `paisOrigem`) VALUES (NULL, 'The Handmaid\'s Tale', ' Elisabeth Moss, Max Minghella, Yvonne Strahovski', 'A religion-based autocracy has taken over most of the United States, renaming the country Gilead. In this country women are second-class citizens. Anyone trying to escape is punished. One such person is June, who is captured while trying to escape with her husband and child and is sentenced to be a handmaid, bearing children for childless government officials. As a handmaid, June is renamed Offred. This is her story.', 2, 2017, '20170426', 2, 'handmaid.jpg', 'Estados Unidos');
INSERT INTO `cinema_v4`.`series` (`idseries`, `titulo`, `elenco`, `sinopse`, `canal`, `ano`, `lancamento`, `temporadas`, `poster`, `paisOrigem`) VALUES (NULL, 'Westworld', ' Evan Rachel Wood, Thandie Newton, Jeffrey Wright, James Marsden, Ed Harris, Tessa Thompson, Anthony Hopkins, Shannon Woodward ', 'Westworld isn\'t your typical amusement park. Intended for rich vacationers, the futuristic park allows its visitors to live out their most primal fantasies with the robotic \"hosts.\" However, the robotic hosts have evolved an artificial consciousness that is similar to, yet diverges from, human consciousness. No matter how illicit the fantasy may be, there are no consequences for the park\'s guests, allowing for any wish to be indulged; but there is a price to be paid.', 3, 2016, '20160902', 2, 'westworld.jpg', 'Estados Unidos');

COMMIT;


-- -----------------------------------------------------
-- Data for table `cinema_v4`.`noticias`
-- -----------------------------------------------------
START TRANSACTION;
USE `cinema_v4`;
INSERT INTO `cinema_v4`.`noticias` (`idnoticias`, `tituloNoticia`, `subtitulo`, `texto`, `dataPost`, `horaPost`, `autorPost`, `tipo`, `relac_games`, `relac_filmes`, `relac_series`, `img`, `destaque`, `imgDestaque`) VALUES (NULL, 'God of War é o exclusivo da PlayStation que teve maior lançamento da história nos EUA', 'Além de ser o exclusivo de PlayStation 4 que vendeu mais rápido na história do console.', 'God of War agora é o game da marca PlayStation -- incluindo todos os títulos de todos os consoles, desde o lançamento do primeiro console em 1995, no Ocidente -- que teve o maior lançamento, nos Estados Unidos. As informações são do grupo de pesquisas NPD (via IGN).', '20180523', NULL, 1, 2, 1, NULL, NULL, 'gow.jpg', 'on', 'gow_destaque.jpg');
INSERT INTO `cinema_v4`.`noticias` (`idnoticias`, `tituloNoticia`, `subtitulo`, `texto`, `dataPost`, `horaPost`, `autorPost`, `tipo`, `relac_games`, `relac_filmes`, `relac_series`, `img`, `destaque`, `imgDestaque`) VALUES (NULL, 'Se correr o bicho pega, se ficar o zumbi come', 'As pessoas são o aspecto mais importante de qualquer comunidade.', 'Trabalhar pelo bem do grupo é o papel dos líderes incumbidos da árdua tarefa de criar um ambiente estável e próspero, no qual todos podem não apenas sobreviver, mas se sentirem motivados também a conquistar.', '20180521', NULL, 1, 2, 2, NULL, NULL, 'decay2.jpg', 'on', 'decay_2_destaque.jpg');
INSERT INTO `cinema_v4`.`noticias` (`idnoticias`, `tituloNoticia`, `subtitulo`, `texto`, `dataPost`, `horaPost`, `autorPost`, `tipo`, `relac_games`, `relac_filmes`, `relac_series`, `img`, `destaque`, `imgDestaque`) VALUES (NULL, 'Vingadores: Guerra Infinita | Novas imagens em alta resolução focam na jornada de Thor', 'Filme continua em cartaz nos cinemas', 'O Marvel Studios divulgou novas imagens em alta resolução de Vingadores: Guerra Infinita. Confira (via CBM): O Marvel Studios divulgou novas imagens em alta resolução de Vingadores: Guerra Infinita. Confira (via CBM): O Marvel Studios divulgou novas imagens em alta resolução de Vingadores: Guerra Infinita. Confira (via CBM):', '20180523', NULL, 1, 1, NULL, 1, NULL, 'avengers_3_news4.jpg', 'on', 'avengers_3_news4.jpg');
INSERT INTO `cinema_v4`.`noticias` (`idnoticias`, `tituloNoticia`, `subtitulo`, `texto`, `dataPost`, `horaPost`, `autorPost`, `tipo`, `relac_games`, `relac_filmes`, `relac_series`, `img`, `destaque`, `imgDestaque`) VALUES (NULL, 'Handmaids Tale: atriz conta que aprova cenas de nudez para irem ao ar', 'Elisabeth Moss revelou que assiste a todas as cenas de nudez antes da série The Handmaid’s Tale ir ao ar na plataforma Hulu, nos Estados Unidos.', 'A produção, que já teve a sua terceira temporada confirmada antes mesmo do fim da exibição da segunda, possui algumas cenas de sexo — em alguns casos, consensual, e em outros, não. O aval de Elisabeth para a transmissão das gravações está previsto no contrato da atriz, que também é uma das produtoras da série.', '20180525', NULL, 1, 3, NULL, NULL, 2, 'handmaids.jpg', 'on', 'handmaids_destaque.jpg');
INSERT INTO `cinema_v4`.`noticias` (`idnoticias`, `tituloNoticia`, `subtitulo`, `texto`, `dataPost`, `horaPost`, `autorPost`, `tipo`, `relac_games`, `relac_filmes`, `relac_series`, `img`, `destaque`, `imgDestaque`) VALUES (NULL, 'Jurassic World: Reino Ameaçado deve ter estreia muito abaixo do original', 'Jurassic World: Reino Ameaçado pode estar mesmo é ameaçado nas bilheterias! Pelo menos é o que apontam as primeiras previsões de bilheteria.', 'De acordo com o Deadline, a aguardada sequência de \'Jurassic World\' deve arrecadar entre US$ 130 e US$ 150 milhões em seu primeiro fim de semana nos EUA.', '20180601', NULL, 1, 1, NULL, 3, NULL, 'jurassicworld2.jpg', 'off', NULL);
INSERT INTO `cinema_v4`.`noticias` (`idnoticias`, `tituloNoticia`, `subtitulo`, `texto`, `dataPost`, `horaPost`, `autorPost`, `tipo`, `relac_games`, `relac_filmes`, `relac_series`, `img`, `destaque`, `imgDestaque`) VALUES (NULL, 'Deadpool 2 | Ator discute a possibilidade de união com Universo Cinematográfico Marvel', 'Stefan Kapicic, ator de Colosso, discutiu recentemente a possibilidade de a franquia da Deadpool se mudar para o Universo Cinematográfico da Marvel, caso o acordo com da Fox com Disney seja finalizado.', '“Veremos. Você sabe que essas são as perguntas que não podemos responder porque não sabemos o que vai acontecer. Mas você sabe, Deadpool é uma franquia de sucesso, então, quem quer que assuma, eu não acho que eles vão mudar nada – e eu não quero mudar porque você sabe que Deadpool é Deadpool”, disse Kapicic. “Precisa ficar com sua classificação etária. Você não quer destruir algo que criou tanto dinheiro e, antes de mais nada, precisa satisfazer os fãs. Então, se eles cometem esse erro, eles vão (a voz de Colossus) precisam lutar sujo.” Um fato curioso de Deadpool 2 é que o filme tem a primeira trilha sonora com o selo de “conteúdo obsceno” da história – saiba mais.', '20180601', NULL, 1, 1, NULL, 4, NULL, 'deadpool_colosso_news.jpg', 'off', NULL);
INSERT INTO `cinema_v4`.`noticias` (`idnoticias`, `tituloNoticia`, `subtitulo`, `texto`, `dataPost`, `horaPost`, `autorPost`, `tipo`, `relac_games`, `relac_filmes`, `relac_series`, `img`, `destaque`, `imgDestaque`) VALUES (NULL, 'Anthony Hopkins pode ter dado spoilers de Westworld no mês passado (mas ninguém entendeu)', 'No mês passado, Anthony Hopkins publicou um vídeo que assustou a todos nós mostrando ele loucasso em sua casa.', 'O que ninguém percebeu é que o vídeo pode ter sido um spoiler do que está por vir na segunda temporada de Westworld. Isso porque o ator postou recentemente um segundo vídeo, que tem ligação direta com ele loucasso em casa e a série da HBO. E por fim, a ligação com Westworld está no piano — que é um dos símbolos mais marcantes da produção — e no episódio mais recente da série, “Phase Space”.', '20180601', NULL, 1, 3, NULL, NULL, 3, 'westworld_news1.jpg', 'off', NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `cinema_v4`.`series_has_generos`
-- -----------------------------------------------------
START TRANSACTION;
USE `cinema_v4`;
INSERT INTO `cinema_v4`.`series_has_generos` (`series_idseries`, `generos_idgeneros`) VALUES (1, 3);
INSERT INTO `cinema_v4`.`series_has_generos` (`series_idseries`, `generos_idgeneros`) VALUES (2, 3);
INSERT INTO `cinema_v4`.`series_has_generos` (`series_idseries`, `generos_idgeneros`) VALUES (3, 3);
INSERT INTO `cinema_v4`.`series_has_generos` (`series_idseries`, `generos_idgeneros`) VALUES (3, 4);
INSERT INTO `cinema_v4`.`series_has_generos` (`series_idseries`, `generos_idgeneros`) VALUES (3, 9);
INSERT INTO `cinema_v4`.`series_has_generos` (`series_idseries`, `generos_idgeneros`) VALUES (3, 10);

COMMIT;

